<?xml version="1.0" encoding="UTF-8"?>
<project name="pathashala" default="runjUnit" basedir=".">
   
     <path id="test.compile.classpath" description="classpath for compiling test-sources">
          <pathelement location="out" />
          <pathelement location="lib/junit-4.12.jar" />
          <pathelement location="lib/system-rules-1.12.0.jar" />
          <pathelement location="lib/mockito-all-1.9.5.jar" />
     </path>
     <path id="test.runtime.classpath" description="classpath for running junit-tests">
          <pathelement location="out" />
          <pathelement location="out/instrumentedclasses" />
          <pathelement location="lib/junit-4.12.jar" />
          <pathelement location="lib/system-rules-1.12.0.jar" />
          <pathelement location="lib/mockito-all-1.9.5.jar" />
          <pathelement location="lib/hamcrest-all-1.1.jar" />
     </path>
     <path id="cobertura.classpath" description="classpath for instrumenting classes">
          <pathelement location="lib/cobertura-2.0.3.jar" />
          <fileset dir="lib">
               <include name="cobertura-dependencies/*.jar" />
          </fileset>
     </path>
 
     <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />
 
     <target name="clean">
          <delete includeEmptyDirs="true" failonerror="false">
               <fileset dir="out" />
          </delete>
     </target>
 
     <target name="prepare" depends="clean">
          <mkdir dir="out" />
          <mkdir dir="out/reports" />
          <mkdir dir="out/reports/junit" />
          <mkdir dir="out/reports/cobertura" />
     </target>
 
     <target name="compile.sources" depends="prepare">
          <javac srcdir="src" destdir="out" debug="on" fork="true" includeantruntime="no" />
     </target>
 
     <target name="instrument.classes" depends="compile.sources">
          <cobertura-instrument todir="out/instrumentedclasses" datafile="out/cobertura.ser">
               <exclude name="**/*Test*.class"/>
               <includeclasses regex=".*" />
               <instrumentationClasspath>
                    <pathelement location="out" />
               </instrumentationClasspath>
          </cobertura-instrument>
     </target>
 
     <target name="compile.tests" depends="instrument.classes">
          <javac classpathref="test.compile.classpath" srcdir="test" destdir="out" debug="on" fork="true" includeantruntime="no" />
     </target>
 
     <target name="runjUnit" depends="compile.tests">
          <junit fork="yes" forkmode="once" printsummary="yes" haltonfailure="yes" showoutput="true">
               <classpath refid="test.runtime.classpath" />
               <formatter type="plain" usefile="false" />
	           <batchtest todir="out/reports/junit">
                    <fileset dir="test">
                         <include name="**/*Test.java" />
                    </fileset>
               </batchtest>
 
               <sysproperty key="net.sourceforge.cobertura.datafile" file="out/cobertura.ser" />
               <classpath refid="cobertura.classpath" />
          </junit>
          <cobertura-report format="html" destdir="out/reports/cobertura" datafile="out/cobertura.ser" srcdir="src" />
     </target>

     <target name="buildJar" depends="runjUnit">
          <jar destfile="lib/BibliotecaApp.jar" basedir="out/classes" excludes="**/*Test*.class">
               <manifest>
                    <attribute name="Main-Class" value="com.thoughtworks.librarysys"/>
               </manifest>
          </jar>
     </target>

     <target name="run" depends="buildJar">
          <java fork="true" failonerror="yes" classname="com.thoughtworks.librarysys">
               <classpath>
                    <path location="lib/BibliotecaApp.jar"/>
               </classpath>
          </java>
     </target>
</project>
